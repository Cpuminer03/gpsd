#!/bin/sh
#
# flockdriver - conduct regression tests as an argent for a remote flocktest
#
# usage: flockdriver -d subdir
#
# The -d argument must be a subdirectory name
#
#  This will perform the following steps:
#
#  * If required, create the origin repo in a directory named after 
#     you beneath the test account home,
#
#   * git pull and build in that repo.
#
#   * make check, capturing the output
#
#   * Notify the project channel of success or failure via CIA
#
#   * mail the output back to you if the test failed.
#

# Project-specific configuration
project=GPSD
origin="git://git.berlios.de/gpsd"
generator="http://gpsd.berlios.de/flockdriver"

# No project-specific stuff below this line

while getopts d opt
do
    case $opt in
        d) subdir=$2; shift; shift ;;
    esac
done

site=`hostname --fqdn`

if [ -f "flockdriver.lock" ]
then
    logmessage="A test was already running when you initiated this one."
    cd $subdir
    mailback=no
else
    (
	echo "Test begins: "`date`

	echo "Site: $site" 
	echo "Directory: ${PWD}/${subdir}"
    ) >"flockdriver-${subdir}.log"

    # Set up or update the repo
    if [ ! -d $subdir ]
    then
	git clone $origin $subdir >>"flockdriver-${subdir}.log" 2>&1
	cd $subdir
    else
	cd $subdir; git pull >>"../flockdriver-${subdir}.log" 2>&1
    fi

    # Perform the test
    if ( ./autogen.sh && make && make check ) >>"../flockdriver-${subdir}.log" 2>&1
    then
	logmessage="Regression test succeeded."
	status=0
    else
	logmessage="Regression test failed."
	status=1
    fi

    echo "Test ends: "`date` >>"../flockdriver-${subdir}.log" 2>&1
    mv "../flockdriver-${subdir}.log" TEST.LOG
fi

# Here's where we abuse CIA to do our notfications for us.

# Addresses for the e-mail
from="FLOCKDRIVER-NOREPLY@${site}"
to="cia@cia.navi.cx"

# SMTP client to use
sendmail="sendmail -t -f ${from}"

# Should include all places sendmail is likely to lurk. 
PATH="$PATH:/usr/sbin/"

# Identify what just succeeded or failed
merged=$(git rev-parse HEAD)
rev=$(git describe ${merged} 2>/dev/null)
[ -z ${rev} ] && rev=${merged}
refname=$(git symbolic-ref HEAD 2>/dev/null)
refname=${refname##refs/heads/}

# And the git version
gitver=$(git --version)
gitver=${gitver##* }

${sendmail} << EOM
Message-ID: <${merged}.${subdir}.blip@${project}>
From: ${from}
To: ${to}
Content-type: text/xml
Subject: DeliverXML

<message>
  <generator>
    <name>${project} Remote Test Flock Driver</name>
    <version>${gitver}</version>
    <url>${generator}</url>
  </generator>
  <source>
    <project>${project}</project>
    <branch>${refname}@${site}</branch>
  </source>
  <timestamp>`date`</timestamp>
  <body>
    <commit>
      <author>${subdir}</author>
      <revision>${rev}</revision>
      <log>${logmessage}</log>
    </commit>
  </body>
</message>
EOM

exit $status
# End.
